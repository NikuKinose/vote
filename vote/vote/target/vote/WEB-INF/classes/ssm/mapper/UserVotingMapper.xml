<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.mapper.UserVotingMapper">
  <resultMap id="BaseResultMap" type="ssm.pojo.UserVoting">
    <id column="user_voting_id" jdbcType="INTEGER" property="userVotingId" />
    <result column="user_id_fk" jdbcType="INTEGER" property="userIdFk" />
    <result column="voting_id_fk" jdbcType="INTEGER" property="votingIdFk" />
    <result column="user_voting_round" jdbcType="INTEGER" property="userVotingRound" />
    <result column="option_id_fk" jdbcType="INTEGER" property="optionIdFk" />
    <result column="scheme_id_fk" jdbcType="INTEGER" property="schemeIdFk" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_voting_id, user_id_fk, voting_id_fk, user_voting_round, option_id_fk, scheme_id_fk
  </sql>
  <select id="selectByExample" parameterType="ssm.pojo.UserVotingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_voting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_voting
    where user_voting_id = #{userVotingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_voting
    where user_voting_id = #{userVotingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ssm.pojo.UserVotingExample">
    delete from user_voting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.pojo.UserVoting">
    insert into user_voting (user_voting_id, user_id_fk, voting_id_fk, 
      user_voting_round, option_id_fk, scheme_id_fk
      )
    values (#{userVotingId,jdbcType=INTEGER}, #{userIdFk,jdbcType=INTEGER}, #{votingIdFk,jdbcType=INTEGER}, 
      #{userVotingRound,jdbcType=INTEGER}, #{optionIdFk,jdbcType=INTEGER}, #{schemeIdFk,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ssm.pojo.UserVoting">
    insert into user_voting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userVotingId != null">
        user_voting_id,
      </if>
      <if test="userIdFk != null">
        user_id_fk,
      </if>
      <if test="votingIdFk != null">
        voting_id_fk,
      </if>
      <if test="userVotingRound != null">
        user_voting_round,
      </if>
      <if test="optionIdFk != null">
        option_id_fk,
      </if>
      <if test="schemeIdFk != null">
        scheme_id_fk,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userVotingId != null">
        #{userVotingId,jdbcType=INTEGER},
      </if>
      <if test="userIdFk != null">
        #{userIdFk,jdbcType=INTEGER},
      </if>
      <if test="votingIdFk != null">
        #{votingIdFk,jdbcType=INTEGER},
      </if>
      <if test="userVotingRound != null">
        #{userVotingRound,jdbcType=INTEGER},
      </if>
      <if test="optionIdFk != null">
        #{optionIdFk,jdbcType=INTEGER},
      </if>
      <if test="schemeIdFk != null">
        #{schemeIdFk,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.pojo.UserVotingExample" resultType="java.lang.Integer">
    select count(*) from user_voting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_voting
    <set>
      <if test="record.userVotingId != null">
        user_voting_id = #{record.userVotingId,jdbcType=INTEGER},
      </if>
      <if test="record.userIdFk != null">
        user_id_fk = #{record.userIdFk,jdbcType=INTEGER},
      </if>
      <if test="record.votingIdFk != null">
        voting_id_fk = #{record.votingIdFk,jdbcType=INTEGER},
      </if>
      <if test="record.userVotingRound != null">
        user_voting_round = #{record.userVotingRound,jdbcType=INTEGER},
      </if>
      <if test="record.optionIdFk != null">
        option_id_fk = #{record.optionIdFk,jdbcType=INTEGER},
      </if>
      <if test="record.schemeIdFk != null">
        scheme_id_fk = #{record.schemeIdFk,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_voting
    set user_voting_id = #{record.userVotingId,jdbcType=INTEGER},
      user_id_fk = #{record.userIdFk,jdbcType=INTEGER},
      voting_id_fk = #{record.votingIdFk,jdbcType=INTEGER},
      user_voting_round = #{record.userVotingRound,jdbcType=INTEGER},
      option_id_fk = #{record.optionIdFk,jdbcType=INTEGER},
      scheme_id_fk = #{record.schemeIdFk,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ssm.pojo.UserVoting">
    update user_voting
    <set>
      <if test="userIdFk != null">
        user_id_fk = #{userIdFk,jdbcType=INTEGER},
      </if>
      <if test="votingIdFk != null">
        voting_id_fk = #{votingIdFk,jdbcType=INTEGER},
      </if>
      <if test="userVotingRound != null">
        user_voting_round = #{userVotingRound,jdbcType=INTEGER},
      </if>
      <if test="optionIdFk != null">
        option_id_fk = #{optionIdFk,jdbcType=INTEGER},
      </if>
      <if test="schemeIdFk != null">
        scheme_id_fk = #{schemeIdFk,jdbcType=INTEGER},
      </if>
    </set>
    where user_voting_id = #{userVotingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ssm.pojo.UserVoting">
    update user_voting
    set user_id_fk = #{userIdFk,jdbcType=INTEGER},
      voting_id_fk = #{votingIdFk,jdbcType=INTEGER},
      user_voting_round = #{userVotingRound,jdbcType=INTEGER},
      option_id_fk = #{optionIdFk,jdbcType=INTEGER},
      scheme_id_fk = #{schemeIdFk,jdbcType=INTEGER}
    where user_voting_id = #{userVotingId,jdbcType=INTEGER}
  </update>
</mapper>